diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 300718a2a..8b5cb62c7 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -303,3 +303,13 @@ if(TEST_DEPICTION AND UNIX)
         alias ${CMAKE_SOURCE_DIR}/test/files/alias.png)
   endif()
 endif()
+
+if(DEFINED ENV{LIB_FUZZING_ENGINE})
+  add_executable(fuzz_obconversion_smiles fuzz/fuzz_obconversion.cpp)
+  target_compile_definitions(fuzz_obconversion_smiles PRIVATE -DFUZZ_INPUT_FORMAT=""SMILES"")
+  target_link_libraries(fuzz_obconversion_smiles ${libs} $ENV{LIB_FUZZING_ENGINE})
+
+  add_executable(fuzz_obconversion_sdf fuzz/fuzz_obconversion.cpp)
+  target_compile_definitions(fuzz_obconversion_sdf PRIVATE -DFUZZ_INPUT_FORMAT=""SDF"")
+  target_link_libraries(fuzz_obconversion_sdf ${libs} $ENV{LIB_FUZZING_ENGINE})
+endif()
diff --git a/test/fuzz/fuzz_obconversion.cpp b/test/fuzz/fuzz_obconversion.cpp
new file mode 100644
index 000000000..384969956
--- /dev/null
+++ b/test/fuzz/fuzz_obconversion.cpp
@@ -0,0 +1,29 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <stdint.h>
+#include <stdarg.h>
+#include <string.h>
+
+#include <openbabel/babelconfig.h>
+#include <openbabel/mol.h>
+#include <openbabel/obconversion.h>
+#include <cstdlib>
+#include <stdio.h>
+#include <iostream>
+
+
+extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {
+    using namespace std;
+    using namespace OpenBabel;
+    OBConversion obconv;
+    OpenBabel::OBMol obmol;
+    std::string str (reinterpret_cast<const char*>(Data), Size);
+
+    //FUZZ_INPUT_FORMAT is defined at compile time
+    if(!obconv.SetInFormat(FUZZ_INPUT_FORMAT)){
+        continue;
+    }
+    obconv.ReadString(&obmol, str);
+    return 0;
+}
+
